# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Resume CI

on: [push]
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
#     services: 
#       # label used to access the service container
#       postgres:
#         # Docker Hub image
#         image: postgres:9.6
#         # service environment variables
#         # `POSTGRES_HOST` is `postgres`
#         env:
#           # optional (defaults to `postgres`)
#           POSTGRES_DB: instazoo
#           # required
#           POSTGRES_PASSWORD: postgres
#           # optional (defaults to `5432`)
#           POSTGRES_PORT: 5432
#           # optional (defaults to `postgres`)
#           POSTGRES_USER: postgres
#         ports:
#           # maps tcp port 5432 on service container to the host
#           - 5432:5432
#         # set health checks to wait until postgres has started
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn clean install -DskipTests
#       run: mvn clean install -Dspring.datasource.username=postgres -Dspring.datasource.password=postgres -Dspring.datasource.url=jdbc:postgresql://postgres:5432/instazoo  
#       run: mvn -B package --file pom.xml
